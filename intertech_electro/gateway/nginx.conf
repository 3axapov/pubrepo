user  nginx;
worker_processes  auto;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    keepalive_timeout  65;

    # Логи (для интеграции можно потом перенаправлять в Graylog)
    access_log /var/log/nginx/access.log;
    error_log  /var/log/nginx/error.log;

    # -------------------------
    # HTTP → HTTPS редирект
    server {
        listen      80;
        server_name localhost myapp.local;

        return 301 https://$host$request_uri;
    }

    # -------------------------
    # HTTPS сервер
    server {
        listen 443 ssl;
        server_name localhost myapp.local;

        # SSL сертификаты (в docker-compose поменяй том ./certs → /etc/nginx/certs)
        ssl_certificate     /etc/nginx/certs/fullchain.pem;
        ssl_certificate_key /etc/nginx/certs/privkey.pem;

        # -------------------------
        # FRONTEND (React SPA)
        location / {
            proxy_pass http://frontend:80/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # React SPA fallback (опционально можно перенести в frontend конфиг)
            try_files $uri /index.html;
        }

        # -------------------------
        # NEW API
        location /api/ {
            proxy_pass http://new-api:9000/;        # порт от php-fpm/nginx фронта new-api
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # -------------------------
        # LEGACY API + frontend
        location /legacy/ {
            proxy_pass http://legacy-api:8080/;    # порт legacy контейнера (nginx внутри supervisord)
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Если нужно отдавать статические файлы напрямую (аватары, изображения)
        location ~* \.(jpg|jpeg|png|gif|ico|css|js|woff|woff2|ttf|svg)$ {
            proxy_pass http://frontend:80;
            expires 30d;
            access_log off;
        }
    }
}